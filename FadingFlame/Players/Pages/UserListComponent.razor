@if (_openEditMask || !IsListSubmissionOver && IsCurrentUser)
{
    if (_openEditMask)
    {
        <button class="btn btn-primary mb-3" @onclick="OnSave">
            Save request
        </button>
        <button class="btn btn-outline-danger mb-3" @onclick="OnDelete">
            Delete request
        </button>
        <button class="btn btn-secondary mb-3" @onclick="() => _openEditMask = false">
            Close
        </button>    
    }
    <EditListComponent List="List" EditProposedListChange="_openEditMask"/>
}
else
{
    @if (IsCurrentUser)
    {
            @if (List.ProposedListChange != null)
            {
                <button class="btn btn-outline-warning mb-3" @onclick="() => _openEditMask = true">
                    <span>List change still pending for approval</span>
                </button>
            }
            else
            {
                <button class="btn btn-outline-primary mb-3" @onclick="() => _openEditMask = true">
                    <span>Request list change</span>
                </button>
            }
    }
    <ReadOnlyListView List="List"/>
}

@code {
    [Parameter]
    public GameListEditModel List { get; set; }
    [Parameter]
    public bool IsCurrentUser { get; set; }
    [Parameter]
    public bool IsListSubmissionOver { get; set; }
    [Parameter] 
    public EventCallback OnRequestListChange { get; set; }
    [Parameter] 
    public EventCallback OnDeleteListChange { get; set; }
    private bool _openEditMask;

    private async void OnSave()
    {
        await OnRequestListChange.InvokeAsync();
        _openEditMask = false;
        StateHasChanged();
    }
    
    private async void OnDelete()
    {
        await OnDeleteListChange.InvokeAsync();
        _openEditMask = false;
        StateHasChanged();
    }
}